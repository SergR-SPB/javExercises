package levelAP2;

import java.util.Random;
import java.util.Scanner;

public class Level_2 {

    public static class Level2_1 {
        /*1. Создать программу, проверяющую и сообщающую на экран,
        является ли целое число записанное в переменную n, чётным либо нечётным.*/

        public static void main(String[] args) {

            Scanner scaner = new Scanner(System.in);
            System.out.println("Введите целое число A для проверки на чётность:");
            int a = scaner.nextInt();

            if (a != 0 && a % 2 == 0) {
                System.out.println("Введенное число " + a + " - чётное!");
            } else if (a == 0) {
                System.out.println("Введенное число " + a + " равно NUL!");
            } else {
                System.out.println("Введенное число " + a + " - не чётное!");
            }
        }
    }

    /*
        Вопросы по задаче 2:
        1. точка или запятая при вводе  числа в качестве разделителя?
        2. как обеденить if??
        Проверить
        ____________________
        [-5. 25]
        */
    public static class Level2_2 {
        /*2. Создать программу, выводящую на экран ближайшее к 10 из двух чисел,
        записанных в переменные m и n.
        Например, среди чисел 8,5 и 11,45 ближайшее к десяти 11,45.*/
        public static void main(String[] args) {
            double numMax = 0;
            double n = -1;
            double a1 = 0;
            double b1 = 0;

            Scanner scanner = new Scanner(System.in);

            System.out.println("Введите первое число А /используйте запятую в качестве разделителя/");
            double a = scanner.nextDouble();

            System.out.println("Введите второе число В  /используйте запятую в качестве разделителя/");
            double b = scanner.nextDouble();

            System.out.println("Введеные числа: А= " + a + ", B= " + b + ".");

            // вариант 1 "без Math.abc
            // Перевод отрицательных чисел относительно 10 в положительные

            if (a < 0) {
                a1 = (a - 10) * n;
            }
            if (b < 0) {
                b1 = (b - 10) * n;
            }
            if (a > 0) {
                a1 = a;
            }
            if (b > 0) {
                b1 = b;
            }                   //Как эо все свести в одно условие


            //Сравнение введенных чисел если они < 10, присваивание искомому числу имени "numMax"
            if (a1 < 10 && b1 < 10) {
                if (10 - a1 < 10 - b1) {
                    numMax = a1;
                } else if ((10 - a1) == (10 - b1)) {
                    System.out.println("Введеные числа: А и B= равны");
                } else {
                    numMax = b1;
                }
            }

            //Сравнение введенных чисел если они > 10, присваивание искомому числу имени "numMax"
            if (a1 > 10 && b1 > 10) {
                if (10 - a1 > 10 - b1) {
                    numMax = a1;
                } else if ((10 - a1) == (10 - b1)) {
                    System.out.println("Введеные числа: А и B равны");
                } else {
                    numMax = b1;
                }
            }
            //Сравнение введенных чисел если a < 10 && b > 10, присваивание искомому числу имени "numMax"
            if (a1 < 10 && b1 > 10) {
                if (10 - a1 < b1 - 10) {
                    numMax = a1;
                } else if (10 - a1 == b1 - 10) {
                    System.out.println("Введеные числа: А и B равны");
                } else {
                    numMax = b1;
                }
            }
            //Сравнение введенных чисел если a > 10 && b < 10, присваивание искомому числу имени "numMax"
            if (a1 > 10 && b1 < 10) {
                if (10 - b1 < a1 - 10) {
                    numMax = b1;
                } else if (10 - b1 == a1 - 10) {
                    System.out.println("Введеные числа: А и B равноудаленные от 10");
                } else {
                    numMax = a1;
                }
            }

            // ввывод числа "numMax" на консоль


            if (numMax == (a - 10) * n) {    //Возвращаемся к первоначально заданному числу
                numMax = a;                  // если оно было отрицательное

            }
            if (numMax == (b - 10) * n) {
                numMax = b;

            }


            System.out.println("Введеное число:  " + numMax + "  ближайшее к десяти.");

        }
    }

    public static class Level2_3 {
        /*3. Создать программу, которая будет проверять попало ли случайно выбранное
        из отрезка [5;155] целое число в интервал (25;100) и сообщать результат на экран.
        Примеры работы программы:
        Число 113 не содержится в интервале (25,100).
        Число 72 содержится в интервале (25,100).
        Число 25 не содержится в интервале (25,100)
        Число 155 не содержится в интервале (25,100)
        */
        public static void main(String[] args) {
            int seedRandom = 6;
            int finiteRandom = 155;
            int seed = 25;
            int finite = 100;
            int random = (int) (seedRandom + Math.random() * (finiteRandom + 1));// ??? Случайное число отрезка [5;155]
            System.out.println("random numeric: " + random);
            System.out.println("*************");

            if (random > 25 && random < 100) {
                System.out.println("Число " + random + " содержится в интервале (" + seed + "," + finite + ").");
            } else {
                System.out.println("Число " + random + " не содержится в интервале (" + seed + "," + finite + ").");
            }
        }
    }

    public static class Level2_4 {
        /*4. Создать программу, выводящую на экран случайно сгенерированное
        трёхзначное натуральное число и его наибольшую цифру.
        Примеры работы программы:
        В числе 208 наибольшая цифра 8.
        В числе 774 наибольшая цифра 7.
        В числе 613 наибольшая цифра 6
        */
        public static void main(String[] args) {

            //1. Генерация случайного числа [min,max)
            int min = 100;
            int max = 1000;
            Random random = new Random();
            int rBaza = min + random.nextInt(max - min);
            int r = rBaza;
            System.out.println("Random numeric: " + r);
            System.out.println("--------------- ");
            //2. Нахождение наибошей чифры из числа
            int zeroNumeric = 3;
            int numeric = 10;
            int startingPoint = 0;
            int endPoint = 0;
            for (int i = zeroNumeric; i > 0; i--) {
                int q = (int) Math.pow(numeric, (i - 1));
                int x = (r / q);
                r = (r - x * q);
                if (x >= startingPoint) {
                    endPoint = x;
                    startingPoint = endPoint;
                } else {
                    endPoint = startingPoint;
                }
            }
            System.out.println("В числе " + rBaza + " наибольшая цифра " + endPoint + ".");
        }
    }


    public static class Level2_5 {
        /*
        5. В три переменные a, b и c явно записаны программистом три
        целых попарно неравных между собой числа.
        Создать программу, которая переставит числа в переменных таким образом,
        чтобы при выводе на экран последовательность a, b и c оказалась строго возрастающей.
        Числа в переменных a, b и c: 3, 9, -1
        Возрастающая последовательность: -1, 3, 9

         */
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            System.out.println("Введите первое целое число: ");
            int a = scanner.nextInt();
            System.out.println("Введите второе целое число: ");
            int b = scanner.nextInt();
            System.out.println("Введите третье целое число: ");
            int c = scanner.nextInt();

            System.out.println("Введена последовательность  [а,b,c] = [" + a + "," + b + "," + c + "]");

// Переменные искомой последовательности
            int min = 0;
            int centr = 0;
            int max = 0;
/*
// вариант 1 без цикла - перебором:
            if (a < b && a < c) {
                min = a;
            } else if (a>b && a<c||a<b && a>c){
                centr = a;
            } else {
                max=a;
            }

            if (b < a && b < c) {
                min = b;
            }else if (b>a && b<c||b<a && b>c){
                centr = b;
            } else {
                max=b;
            }

            if (c < a && c < b) {
                min = c;
            } else if (c>a && c<b||c<a && c>b){
                centr = c;
            } else  {
                max = c;
            }

            System.out.println("Искмая последовательность = [" + min + "," + centr + "," + max + "]");
*/
// Вариант 2 - подсмотренный - непонятно как работает
/*
            int x;
            System.out.println("Числа в переменных a, b и c : " + a  + " " + b + " " + c);
            if (a > b) {
                x = a; a = b; b = x;
            }
            if (b > c){
                x = b; b = c; c = x;
            }
            System.out.println("Возрастающая последовательность: " + a  + " " + b + " " + c);
*/
// Вариант 3 с циклом for
            for (int i = 3; i > 0; i--) {
                if (a < b && a < c) {
                    min = a;
                } else if (a > b && a < c || a < b && a > c) {
                    centr = a;
                } else {
                    max = a;
                }
                int x = a; // Переставление переменных местами для послед. итерации
                a = b;
                b = c;
                c = x;
            }
            System.out.println("Искмая последовательность = [" + min + "," + centr + "," + max + "]");
        }

        public static class Level2_6 {
            /*6. Создайте программу, выводящую
            на экран все четырёхзначные числа
            последовательности 1000 1003 1006 1009 1012 1015 ….*/
            public static void main(String[] args) {
                int min = 1000;
                int max = 9999;
                int n = 3;

                for (int i = min; i <= max; i += n) {
                    System.out.println(i);
                }
            }
        }

        public static class Level2_7 {
            /* 7. Создайте программу, выводящую на экран первые 55
            элементов последовательности 1 3 5 7 9 11 13 15 17 ….
            */
            public static void main(String[] args) {
                int min = 1;
                int max = 55;
                int n = 2;
                int number = 1;

                for (int i = min; i <= max; i++) {

                    System.out.println(i + " / " + number);
                    number += n;
                }
            }
        }


        public static class Level2_8 {
            /*8. Создайте программу, выводящую на экран
            все неотрицательные элементы
            последовательности 90 85 80 75 70 65 60 ….*/

            public static void main(String[] args) {

                int min = 0;
                int max = 90;
                int n = 5;

                for (int i = max; i >= min; i -= n) {
                    System.out.println(i);
                }
            }
        }

        public static class Level2_9 {
            /*9. Создайте программу,
            выводящую на экран первые
            20 элементов последовательности 2 4 8 16 32 64 128 ….*/
            public static void main(String[] args) {
                int min = 1;
                int max = 20;
                int x = 2;
                int number = 2;

                for (int i = min; i <= max; i++) {
                    System.out.println(i + " / " + number);
                    number *= x;
                }
            }
        }


        public static class Levl2_10 {
            /*10. Создайте программу, вычисляющую факториал натурального числа n,
            которое пользователь введёт с клавиатуры.10.
            Пример
            5! = 1*2*3*4*5 (Википедия)
            */
            public static void main(String[] args) {
                Scanner scanner = new Scanner(System.in);
                System.out.println("Input number:");
                int n = scanner.nextInt();

                long fact = 1;

                int min = 1;
                int max = n;
                int i;

                for (i = min; i <= max; i++) {
                    fact = fact * i;
                    System.out.println(i + " / " + fact);
                }
                System.out.println(fact);
            }
        }

        public static class Level2_11 {
            /*11. Выведите на экран все положительные делители натурального числа,
            введённого пользователем с клавиатуры.*/
            public static void main(String[] args) {
                Scanner scanner = new Scanner(System.in);
                System.out.println("Input number: ");
                int number = scanner.nextInt();
                int nymer = 1;

                for (int i = 1; i <= number; i++) {
                    if (number % i == 0) {
                        System.out.println("Делитель № " + nymer + ":  " + i);
                        nymer++;
                    }
                }
            }
        }

        public static class Level2_12 {
            /*12. Проверьте, является ли введённое пользователем
             с клавиатуры натуральное число — простым.
             Постарайтесь не выполнять лишних действий
             (например, после того, как вы нашли хотя бы один нетривиальный делитель уже ясно,
             что число составное и проверку продолжать не нужно). Также учтите,
             что наименьший делитель натурального числа n, если он вообще имеется,
             обязательно располагается в отрезке [2; √n].
            */
            public static void main(String[] args) {
                Scanner scanner = new Scanner(System.in);
                System.out.println("Input number: ");
                int n = scanner.nextInt();
                System.out.println(n % 2);

                int x = 0;
                System.out.println("Math.sqrt(" + n + ") " + Math.sqrt(n));


                for (int i = 2; i <= Math.sqrt(n) /* && i < n*/; i++) {
                    if (n % i == 0) {
                        x++;
                        break;
                    }
                    System.out.println("Количество итераций в цикле" + i);
                }


                if (x == 0) {
                    System.out.println("number " + n + ", this Prime number!");
                    System.out.println(x);
                } else if (x != 0) {
                    System.out.println("number " + n + ", this NOT Prime number!");
                    System.out.println(x);
                }
            }
        }

        public static class Level2_13 {
            /*13. Выведите на экран первые 11 членов последовательности Фибоначчи.
            Напоминаем, что первый и второй члены последовательности равны единицам,
            а каждый следующий — сумме двух предыдущих.
             1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181
            */
            public static void main(String[] args) {
                int f1 = 1;
                int fi = 1;
                int n = 11;

                int fib;
                System.out.print("Числа Фибоначи: " + f1 + " . " + fi + " . ");
                for (int i = 2; i < n; i++) {


                    fib = f1 + fi; //fib = 1+1
                    f1 = fi; //f1 = 1
                    fi = fib;//fi = 2
                    System.out.print(fib + " . ");
                }
            }
        }
    }
}
        

